/*
* 本人毕业设计中所言的创新算法
*/

// Uniform变量
uniform float MAX_DISTANCE_IS_FOVEAL_REGION;
uniform float MIN_SIZE_IS_FOVEAL_REGION;

uniform float FOVEATED_REGION_BOUND;

// 区域判断算法
float IsFovealRegion(in float theta, in float L, in float R, out bool rel)
{
    bool A = theta < FOVEATED_REGION_BOUND;
    bool B = L < MAX_DISTANCE_IS_FOVEAL_REGION;
    bool C = R > MAX_DISTANCE_IS_FOVEAL_REGION;
    
    //rel = A & B & C;
    rel = A;

    // 为了平滑过渡
    float x = abs(theta - FOVEATED_REGION_BOUND) / 30.0;
    x = 1.0 - smoothstep(x);
    x = rel ? 1.0 : x;
    x = x < 0.0001 ? 0.0001 : x;
    return x;
}

// 自适应的相位函数选择算法
/*float SelectPhaseFunction(float mu, float g, bool isFoveal)
{
    if(isFoveal)
    {
        if(MEDIASIZE_IS_LEQ_LIGHTZSIZE)
        {
            return PhaseFunc_RAYLEIGH(mu);
        }
        else
        {
            return PhaseFunc_MIE(mu, g);
        }
    }
    else
    {
        return PhaseFunc_CON();
    }
}
*/